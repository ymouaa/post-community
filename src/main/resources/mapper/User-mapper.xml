<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
每个标签对应接口中的方法
id 对应方法名
resultType 应该要写包名+类名
但因为在配置文件中写了 所以直接写User就行了


-->
<!--suppress ALL -->
<mapper namespace="com.example.demo.dao.UserMapper">

    <!--
    替换重复的sql
    -->
    <sql id="selectFields">
        id,
        username,
        password,
        salt,
        email,
        type,
        status,
        activation_code,
        header_url,
        create_time
    </sql>

    <sql id="insertFields">
        username,
        password,
        salt,
        email,
        type,
        status,
        activation_code,
        header_url,
        create_time
    </sql>

    <select id="selectById" resultType="User">
        select
        <include refid="selectFields"></include>
        from user where id=#{id}
    </select>


    <select id="selectByName" resultType="User">
        select
        <include refid="selectFields"></include>
        from user where username=#{username}
    </select>


    <select id="selectByEmail" resultType="User">
        select
        <include refid="selectFields"></include>
        from user where email=#{email}
    </select>




    <!--
    #{ ,, , }
    写User里的属性名
    -->
    <insert id="insertUser" parameterType="User" keyProperty="id">
        insert into user (<include refid="insertFields"></include>)
        values (#{username},#{password},#{salt},#{email},#{type},#{status},#{activationCode},#{headerUrl},#{createTime})
    </insert>


    <update id="updateStatus">
        update user set status =#{status} where id=#{id}
    </update>

    <update id="updatePassword">
        update user set password =#{password} where id=#{id}
    </update>

    <update id="updateHeader">
        update user set header_url =#{headerUrl} where id=#{id}
    </update>
</mapper>